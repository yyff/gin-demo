version: "2.1"
services:

  gin-demo:
    build: .
    ports:
      - "${GIN_DEMO_PORT:-8000}:8000"
    container_name: gin-demo
    environment:
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://localhost:8200}
      - ELASTIC_APM_LOG_FILE=stderr
      - ELASTIC_APM_LOG_LEVEL=debug
    depends_on:
      elasticsearch:
        condition: service_healthy
      apm-server:
        condition: service_healthy
      db:
        condition: service_healthy
    command:
      - "/gin-demo"
      - "-listen=:${GIN_DEMO_PORT:-8000}"
      - "-db=mysql:apm_user:apm_passwd@tcp(localhost:3306)/apm_db?charset=utf8"

  apm-server:
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION:-6.8.2}
    ports:
      - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
      - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    command: >
      apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E xpack.monitoring.elasticsearch=true
        -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
        -E output.elasticsearch.pipeline=${APM_SERVER_ELASTICSEARCH_OUTPUT_PIPELINE:-apm_pipeline}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/healthcheck"]
      retries: 10
      interval: 10s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-6.8.2}
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "path.data=/usr/share/elasticsearch/data/${STACK_VERSION:-6.8.2}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 5g
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    ports:
      - "127.0.0.1:${ELASTICSEARCH_PORT:-9200}:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION:-6.8.2}
    environment:
      SERVER_NAME: kibana.example.org
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "127.0.0.1:${KIBANA_PORT:-5601}:5601"
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      elasticsearch:
        condition: service_healthy
  db:
    image: mysql:5.6
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      - MYSQL_USER=apm_user
      - MYSQL_PASSWORD=apm_passwd
      - MYSQL_DATABASE=apm_db
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

volumes:
  esdata:
    driver: local

